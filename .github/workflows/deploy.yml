name: Configuring Static Website on S3

# Trigger workflow when a pull request is raised to merge with main
on:
 pull_request:
   types:
      - opened
      - synchronize  # Trigger when changes are pushed to an open PR
   paths:
   - terraform/**
 
permissions:
  contents: read
  id-token: write
  pull-requests: write  # Needed for commenting on PRs

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: any
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          audience: sts.amazonaws.com
          role-to-assume: ${{ secrets.AWS_ROLE}}
          aws-region: ${{ secrets.AWS_REGION}}
          
      - name: Intialize Terraform
        working-directory: terraform
        run: terraform init
        
      - name: Terraform Plan
        working-directory: terraform
        run: terraform plan -var="domain_name=${{ secrets.DOMAIN_NAME }}"  -var="mail=${{ secrets.MAIL}}" -var="region=${{ secrets.AWS_REGION}}" -no-color > tfplan.txt

      - name: Upload Plan Output
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: terraform/tfplan.txt
      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const planOutput = fs.readFileSync('terraform/tfplan.txt', 'utf8');
            const commentBody = `### Terraform Plan Output\n\`\`\`\n${planOutput}\n\`\`\``;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: commentBody
            });
      - name: Waiting Approval
        # This step waits for manual approval via the environment
        run: echo "Waiting for approval to apply changes..."
        
      - name: Terraform Apply
        working-directory: terraform
        run: terraform apply -auto-approve -var="domain_name=${{ secrets.DOMAIN_NAME }}"  -var="mail=${{ secrets.MAIL}}" -var="region=${{ secrets.AWS_REGION}}"






